openapi: 3.0.0

info:
  title: User API
  version: 0.0.1-SNAPSHOT
  description: API for managing users
  contact:
    name: "Alexey Nikitin"
    url: "https://t.me/Alexey_Nikitin1313"
    email: "4pnav21@gmail.com"

servers:
  - url: http://localhost:8113

paths:
  /users:
    get:
      summary: Get users by birthday range
      operationId: userGetAllByBirthday
      parameters:
        - in: query
          name: from
          schema:
            type: string
            format: date
            example: "2000-01-30"
          required: true
          description: Start date of the birthday range "yyyy-mm-dd"
        - in: query
          name: to
          schema:
            type: string
            format: date
            example: "2024-01-01"
          required: true
          description: End date of the birthday range "2024-01-01"
        - in: query
          name: offset
          schema:
            type: integer
            format: int64
            default: 0
          description: Offset for pagination
        - in: query
          name: limit
          schema:
            type: integer
            format: int64
            default: 10
          description: Limit for pagination
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageableUserResponse'

    post:
      summary: Create a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreateOrFullUpdateRequest'
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '409':
          description: Conflict - User creation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'


  /users/{id}:
    get:
      summary: Get user by ID
      operationId: userGetUserById
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int64
          description: ID of the user to get
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'

    put:
      summary: Update user by ID
      operationId: userFullUpdateUser
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int64
          description: ID of the user to update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreateOrFullUpdateRequest'
      responses:
        '200':
          description: User updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'

    patch:
      summary: Partially update user by ID
      operationId: userPartialUpdateUser
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int64
          description: ID of the user to update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserPartialUpdateRequest'
      responses:
        '200':
          description: User updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'

    delete:
      summary: Delete user by ID
      operationId: userDeleteUserById
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int64
          description: ID of the user to delete
      responses:
        '200':
          description: User deleted successfully

# schemas
components:
  schemas:
    PageableUserResponse:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/UserResponse'
        pageable:
          $ref: '#/components/schemas/Pageable'
    Pageable:
      type: object
      properties:
        offset:
          type: integer
          format: int64
        limit:
          type: integer
          format: int64
        total:
          type: integer
          format: int64

    UserCreateOrFullUpdateRequest:
      type: object
      required:
        - email
        - firstName
        - lastName
        - birthday
      properties:
        email:
          type: string
          format: email
        firstName:
          type: string
        lastName:
          type: string
        birthday:
          type: string
          format: date
        address:
          type: string
        phone:
          type: string

    UserPartialUpdateRequest:
      type: object
      properties:
        email:
          type: string
          format: email
        firstName:
          type: string
        lastName:
          type: string
        birthday:
          type: string
          format: date
        address:
          type: string
        phone:
          type: string

    UserResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        email:
          type: string
          format: email
        firstName:
          type: string
        lastName:
          type: string
        birthday:
          type: string
          format: date
        address:
          type: string
        phone:
          type: string

    ErrorResponse:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
          description: The timestamp when the error occurred
        status:
          type: integer
          description: The HTTP status code of the error
        error:
          type: string
          description: The type of error
        message:
          type: string
          description: The error message
        path:
          type: string
          description: The request path that caused the error
